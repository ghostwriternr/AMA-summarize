[deleted]
Welcome to IAMA. We're happily using EC2 for a couple of our behind the scenes bots here - so thanks!  Other than the IAMA bots, what's the coolest thing going on in your datacenters? What kinds of crazy technology are you using to run what feels like half of the modern internet?
I was trying out ECS the other day, but it looks like it doesn't work with our private registry running Docker Registry 2.0.  Am I doing something wrong or does ECS just not support it? 
[deleted]
Are there plans for ECS to work with dedicated servers?  Due to security concerns, we can only run our software on dedicated instances, so it would be awesome to have a cluster of dedicated instances with containers managed by ECS.
Are there any development plans to make networking permissions a bit more streamlined? The last time I used AWS I had to look in several different places to adjust security settings for various OpsWorks containers. If there's a plan, how far out is it?  Thanks!
We would like to use Amazon ECS, but we have Service-Oriented Architecture + Docker, so we have lots of internal APIs behind the scene, we have 3 environments (prod, test, dev), ~40 Services per env (foo-api, bar-api, foobar-api ...) so in current shape (ECS), we need to spend at least 18 USD per service with ELB * 40 services * 3 envs = 2160 USD per month only for ELB (not including traffic). Do you have any other plan for service discovery, not related to ELB? We really like AWS and we don't want to setup our own Mesos + Kubernetes at EC2 or move to GCloud but ECS IMHO is not SOA friendly. Can you give us some advices?
Do you sponsor non-profit Open Source projects? If so what is the best way to contact you?
Is there any reason that users can't spin up Windows Desktop O/S? For example, I'd love to do a lot of testing using desktop O/Ses and it would be great if we had those AMI's or a way to create those AMIs.  
[deleted]
Hi, Thank you for your question.  There are a number of cool things going on in our datacenters.  Instead of listing all of them, let me point you to a couple of talks from the last re:Invent.  The first one is James Hamilton's talk on Innovation at Scale: https://www.youtube.com/watch?v=JIQETrFC_SQ and the other one is a talk on some of the core distributed systems that we use at AWS: https://www.youtube.com/watch?v=QVvFVwyElLY 
Awesome. I'll definitely watch these when I get home.
ECS will run on whatever EC2 instances you provide (we recommend instances running within a VPC).  This includes dedicated instances.  So you should be able to launch your own dedicated instances and use them with ECS.  The key is to make sure you are running an AMI that supports Docker and is running the Amazon ECS agent.
Thanks so much for providing the platform. I've been using ECS for our dev stuffs in Ireland region but we can push to pre-prod because we currently use singapore region (ap-southeast-1) as our main dc, when will ECS be available in singapore region?
Currently we support Docker 1.5.  Docker Registry 2.0 is officially supported with Docker 1.6.  We are qualifying Docker 1.6 as we speak.
AWS has an option for sending email. Does AWS have any plans for email accounts for receiving+sending email?  I would love to have a mailbox with the reliability and scalability of AWS, and I think a lot of companies miss this when switching their infrastructure over to AWS.
When will AWS provide information about the energy footprint of its data centers? Your goal of being 100% powered by renewable energy is exciting, but hard to judge what that means without any data. Other large tech companies are much more transparent about this.
As far as I know, there is no simple way to spin up EC2 instances to launch at a specific time.  For example, if I want to start an instance at 2am, there isn't a simple way to do that.    Is this correct, and do you have any plans to implement this?
There is a bug currently in the console, if you try to "Add Container definition" with a small screen (13 inch laptop), the window to add the container is too low, and we cannot access the buttons to complete the form. I have send feedback but haven't heard back.  What's the best way to feed that back and get it fixed?
[deleted]
There are many options to do this today.  You can use Eureka from Netflix (https://github.com/Netflix/eureka) or take a look at AirBnB Synapse and this pull request: https://github.com/airbnb/synapse/pull/110.  The pull request allows linking a Synapse container with your application and the Synapse container with Haproxy will forward requests to the location in your cluster where the targeted services are running and dynamically reconfigure as services stop and start by using our Describe APIs.
I'm not with amazon but..  http://aws.amazon.com/workmail/  Jeff's Blog post explaining it: https://aws.amazon.com/blogs/aws/amazon-workmail-managed-email-and-calendaring-in-the-aws-cloud/
Hey. I would love to point you all to /r/aws. It's a small little community with questions/discussions. It would be awesome if some AWS specialists would come in sometimes and help / discuss with other people.  Are some of you redditors?
I will do the talk about our first experiences with Amazon ECS at local Docker meetup http://www.meetup.com/Docker-Krakow-Poland/events/221735153/ I'm almost sure that most people would like to know what's next? Can you share with us your roadmap for ECS? When we can expect next integrations?
Thank you for your feedback.  As with all our services we plan to expand to AWS regions and your feedback definitely helps us prioritize rollout.
Is there a way to get the cluster to scale on demand,  la beanstalk?  If not, any plan for the the near future?
There is a bug currently in the console, if you try to "Add Container definition" with a small screen (13 inch laptop), the window to add the container is too low, and we cannot access the buttons to complete the form. I have send feedback but haven't heard back.  What's the best way to feed that back and get it fixed? 
Thank you.  We are aware of this bug and are in the process of fixing it and will be rolling it out soon.
Is EC2-Classic always going to be available?  Is there any road map that you know of?
Multi-container Docker environments for Beanstalk leverage ECS.  So you can continue to use that.  But if you want to use ECS, you can use AutoScaling to scale your fleet of EC2 instances.  Keep an eye out on our blog for examples of how you can do that.
Q1. Any plans to integrate ECS with Lambda? I.e. ability to map Lambda event sources to ECS task/service instead of Lambda function?  Q2. Any plans to implement cron-like scheduler for ECS tasks, either native or via external schedulers like AirBnB Chronos? 
Howdy!  Are there any near-term plans to support running &gt; 1 copies of a given container on a single instance w/o specifying them as additional task definitions?  Thanks!
json is great for software to exchange data between themselves, but it's terrible for human being: No tooling, no comments, commas hell (if you miss one, it invalidates the whole file), difficult to debug, no schema to test against etc...  Have you guys thought of adding another config language like yaml or even xml (hey, at least there's tooling for it)?
Q1. That does sound super cool.  We'll take that back to the Lambda team.
Do you think Amazon kind of "fell into" AWS business?  In talking to other fans of AWS, I get the idea that Amazon built these great data centers for one day a year (Cyber Monday) and realized that they could sell the server time the other 364 days a year.   Any thoughts or comments on that?  
Hi. Thank you for the great service, guys,  First of all, I'd like to tell that I had to wake up at 4 am in order to ask a bunch of questions. We like ECS very and are thinking of moving our architecture to Microsevices.  Question: Auto Scaling Group  It can spin up and shut down EC2 instances. **Will ASG be able to spin up and shut down containers (TaskDefinitions) dynamicaly? When?**  Related StackOverflow question I asked: http://stackoverflow.com/questions/29737034/does-aws-ecs-support-per-container-dynamic-scalability
Very excited for ECS! Any chance we can get support for zipped Dockerfile + context like on Elastic Beanstalk?
Howdy again!  Are there any near-term plans for a single ELB to support mapping from a single ingress port (e.g. 443) to multiple service ports on multiple endpoints/containers (e.g. 6743, 4632, and 7322)?  Thanks!
When I created an ECS instance, I noticed that my full list of security groups was not available for selection.  Instead, I had to manually add the desired rules into the assigned security group.  Why is this? 
I have 2 concerns about ECS. 1) How do you ensure optimal instance sizing to ensure you arent paying for compute resources that containers arent yet using? 2) Say you stand up your services on a customer specific basis and you are running many customers. How can you ensure that ECS scales so that one set of services doesnt compromise the function of the rest of the services. 
Thanks! Much appreciated.
Q2. We have a Mesos Scheduler Driver than allows you to use Chronos with ECS (https://github.com/awslabs/ecs-mesos-scheduler-driver).   Note that this is just a proof of concept to show how you can do this.  We've heard this request from others customers as well and are looking at how we can make this even easier.
Ok, but we shouldn't expect any other, out-of-box, solution from ECS like integration with ELB, right?
Are there plans to provide hosted orchestration layers for containers as a service (kubernetes, fleet) on top of ECS? Does Amazon intend to build their own?
Howdy!   You can run multiple tasks from a single task definition on a single container instance as long as the resources are available.
With bigger images, deploy feels like they take forever.  When will AWS have its own docker registry? 
What's your blog URI?
Is there a best practice or planned support for local environments which use ECS for production/test workloads?  There was mention of `eb local` (elasticbeanstalk engine for local use) but that has yet to be released.
Thank you for getting up in the wee hours.  Certainly appreciate that.  ECS has a CreateService and UpdateService API for long running tasks.  For tasks started with CreateService you can trigger UpdateService based on the metrics you care about.  Keep an eye out on our blog for examples of how you can scale tasks and integrate with Auto Scaling.
Hi,  YAML is definitely easier for humans to consume.  I would recommend that you take a look at this Github repository: https://github.com/ambitioninc/container-transform that allows you to transform YAML-based Compose templates to ECS Task Definitions (and back)
Are there plans to offer a private docker registry service similar to how AMI's act and if so when would it possible be available? 
A long-time and extremely happy AWS user for years here, so thanks so much for all the work you guys to to constantly improve it for us.  Question: RDS natively supports automated snapshots. On EC2, we currently are forced to use an instance that runs a cron to snapshot all of our instances (using cli-tools) every night. Why hasn't automated snapshotting of volumes been built into the EC2 web console yet? This feature would be SO useful.
What is the recommended approach for IAM permission use within Docker containers, any plans to have the ecs agent be able to forward into the containers ?
Awesome work team! I'm having a blast experimenting with ECS on elastic beanstalk.  Are there any plans to ease hosting private images, like the Google Container Registry? I've hacked together a solution using the S3-backed docker registry container, but I'd love to simply point to an S3 bucket as a "registry" and use IAM for auth.
We'd love to ask you more questions about this.  Could you post this question on the ECS forums (http://amzn.to/1PYrErc)?
What's yalls opinion on Best Buy and their bullshit warranties?
Thank you for the feature request.  Could you please post this on the ECS forums (http://amzn.to/1PYrErc)?  Your feedback definitely helps us prioritize features and allows other customers to weigh in.
&gt; Multi-container Docker environments for Beanstalk  Wow! How did I miss this:  http://aws.amazon.com/about-aws/whats-new/2015/03/aws-elastic-beanstalk-supports-multi-container-docker-environments/  If you're going to use ECS anyway, are there any advantage to  Docker in Beanstalk rather than ECS?
Hi! ARMv8, when's that happening?  Most software is VM-based nowadays, and the parts that aren't have mostly been ported, it would be nice to see some ARMv8 server solutions compared to just x86, everywhere.
You can use IAM roles just like you do today (they are accessible from within your container).  You should be aware that the IAM role is available to other containers running on the instance.
Will do, thanks!  PS: I'm learning more from this IAMA than from reading the manual ;-)
Hi,  My two main issues with ECS as currently delivered are: - I think the EC2 security group per instance model is a poor fit for a container world where many containers run on the same instance. - I believe any networking model that provides less than a unique, routable IP per container is flawed.  Are any of these issues something you're looking to address?  
How much of what you get to work on is open source? Are you allowed to contribute back to upstream projects?
Hi  Looks like this is a popular request.  I'd definitely recommend dropping by the ECS forums (http://amzn.to/1PYrErc) so that we can have a deeper discussion and include other customers.
Currently, we are using ELB+ASG+EC2. It works great. We have a dozen of instances which automatically gets more than a dozen on high load. But we would like to migrate our VPC from spinning AMI's to spinning containers.  **Please, recommend a strategy, step-by-step guide, or document to migrate from AMI's to ECS Docker Containers as smooth as possible. Is there one already?**
I'll answer for the ECS team.  The ECS Agent https://github.com/aws/amazon-ecs-agent) and the ECS Init RPM (https://github.com/aws/amazon-ecs-init) are both on Github under OSS licenses.  We've also contributed code to Docker (https://github.com/docker/docker/pull/5868) 
What kind of monitoring is available today for ECS and can you tell us what will be coming soon?  Also interested in seeing a dashboard which tells me where my resources are and what they're up to. At scale, any of the docker management solutions will need to make it simple to track patterns.
We're interested in getting additional detail on this one.  If you drop by the ECS forums (http://amzn.to/1PYrErc) we can definitely dig into this.
Yes! :-)
Not just a question for ECS, but other AWS offerings as well. What is your backend stack mostly written in? Since the majority of AWS offerings deal with infrastructure, I'd imagine the stack is C/C++/Go based?
Please don't use amzn.to url shorteners, reddit's spam filter does not like them. Thanks!
Looks like this is an area we could improve our documentation based on the questions today. Use CreateService to launch services and then the UpdateService API to scale your tasks.  Watch the AWS Compute Blog for best practices on scaling tasks.
[deleted]
Care to expand? I'm especially interested in what you believe is an ideal networking model for containers. Overlay network (VXLAN etc)? 
What are your ringtones?
Thanks for your feedback.  You can send custom metrics to cloudwatch, e.g. from cAdvisor today.  We've also heard from customers that they are including a log pulling and metrics generation container in their Task Definitions   We are also interested in the kinds of metrics you would be interested in and how you would use them.  If you could post these on the ECS forums that would be super awesome (https://forums.aws.amazon.com/forum.jspa?forumID=187)
Hey team! I've been happily using AWS EC2 for 4 years now. Incredible value.   My question is all my instances are the previous generation m1.small type. There is currently no upgrade path that I am aware of to be able to transform these instances to the current generation.  Will that be a possibility in the future?   Also it states: "Previous Generation Instances are still fully supported and retain the same features and functionality."   Is that something that  I can count on for a long time? Mainly because some of the instances I'm using are highly specialized and took a long time to configure.   Many Thanks!
For the uninitiated here, could you please briefly introduce the EC2 Container Service?  For my question: Can it benefit users of EC2 Spot Instances?  Thanks 
* Deepak: Led Zepellin's "Kashmir" * Anthony: Whatever the default iOS ringtone is * Sam: UCLA fight song * Dan: AT&amp;T Firefly * Everyone else: Silent
I'll second this for sure - we ended up going with a private docker hub repo, but that isn't going to work as well once we expand to more of our products being containerized. 
VZW Airwaves for me!
http://aws.amazon.com/blogs/compute   http://aws.amazon.com/blogs/aws
Done.  If anybody wants to vote it up:  https://forums.aws.amazon.com/thread.jspa?threadID=179043 
TL;DR&gt; https://www.youtube.com/watch?v=zBqjh61QcB4  Absolutely.  We think of ECS as a way for you to efficiently run Docker-enabled applications across a cluster of EC2 instances.  We focus on the complexity of state and cluster management, and let you focus on how you want to split up your applications into containers.    And yes, you can use Spot Instances with ECS. 
Is there a simpler autoscaling solution planned? Becuase from what I can read in your answer AutoScaling in ECS is a bit of the manual work.  We'd love to see a solution on per container/TaskDefinition level where we would not need to startup AMI's, but the AMI's would be started automatically by cloud.  Also, it would be good to reflect the current state of AutoScaling somewhere in the docs.
Performance wise, what is more impactful for cloud based applications?  CPU and memory instensive applications or bandwidth intensive applications?
Great idea! I will try to get some of SA (Solution Architect) colleagues to hang out there.
Basically cron as an AWS service where you could drop in CLI commands to execute on a schedule/1-off?
1. Two strategies here today.  You can start with smaller instances (as long as they meet the minimum requirements of your applications) and autoscale.  Alternatively you can be conservative and start with larger instances and monitor overall cluster utilization to keep the right number.  We are working on providing you task and cluster-level metrics that can help you track cluster utilization: https://github.com/aaithal/amazon-ecs-agent/tree/telemetryacs  2. I think the metrics mention above will help you achieve that (Assuming each customer is their own task).  We would also be interested in more discussion on this topic, so it would be awesome if you add this question to our forums: https://forums.aws.amazon.com/forum.jspa?forumID=187
We've heard this request from other customers.  We are talking to the ELB team about this.  Their GM and I have coffee together on most mornings. I suspect he is amenable to me buying him coffee everyday.
Will do - thanks
I realize Amazon EC2 has nothing to do with Amazon Mechanical Turk... but do any of you know a guy who knows a guy that can get me the mythical Masters Certification?
The one that works!! But seriously, any answer to this question requires a lot more time than we have in this AMA.  Even within our team there is more than one opinion on this question.
Does our Service Scheduler (http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html) work for you?  It is designed for long running services.
&gt; use CreateService to launch services and then the UpdateService API to scale your tasks  Can UpdateService scale up/down the number of instances?
If I understand your question correctly, you will find this blog post on using Jenkins with ECS useful: https://blogs.aws.amazon.com/application-management/post/Tx32RHFZHXY6ME1/Set-up-a-build-pipeline-with-Jenkins-and-Amazon-ECS
I have no idea what that is, but I want it too :-)
Thanks for the AMA.  Can you ELI5 what ECS is and how someone with &gt;200 ec2 instances with multiple environments can take advantage of it?  Say I have puppetmaster, ELB, frontends, backends, NFS, RDS, Cloudfront. Would ECS make my life easier?
Basic question: For all the mainly Windows admins that are curious about the looming cloud, what skills should we be worried about honing the most? Chef/Puppet? Python? Should we eventually expect the same menu driven UI that we've be accustomed to in the Windows world? What skills would you say are most important to leverage AWS?
I quickly browsed the docs for CreateService and UpdateService API. I am probably wrong, but these API calls  &gt; Runs and maintains a desired number of tasks   The key word is *desired*. I do not know what is my *desired number* because I haven't met the high load yet. When my containers gets hot on CPU/RAM/Bandwidth the desired number increases. Otherwise, the number of running TaskDefinitions should decrease.  Am I missing something?
Is there somewhere where known bugs and issues are listed?
Amazon EC2 container service team, what's your favourite cheese? 
Yeah, I definitely think that the EC2 layer should be invisible.  Let the auto-scaler scale up and down the containers automatically while allocating underlying EC2 instances as needed.   If we're managing containers, then we don't want to always have to pick and choose the underlying sizes of instances they run on.  
On the first part of your question: ECS is ideal for people you run a number of instances, are running a mix of service-oriented and batch applications, and want to orchestrate them efficiently across a cluster.  On the second part, I am in the "yes" camp.
Lots of folks here seem to like Harvati.  Brie and Gouda are right on the heels.  Jeff Barr seems to like smelly ones and Sam likes Beecher's Flagship. 
I thought that myth had been debunked a long time ago:  http://www.networkworld.com/article/2891297/cloud-computing/the-myth-about-how-amazon-s-web-service-started-just-won-t-die.html 
UpdateService only scales tasks. You can use Auto Scaling to scale your instances.
Is some cases this might be security issue. For instance I need have an access for one container to S3, but I have to give to all on this instance. Is there any way to prevent it?
Hm, not to devolve into support - we started a test service task with 5 requested copies against 3 container instances, and received only 3 service tasks.  Could this limitation have been a result of something port mapping-related?
You can start with a number that you think is reasonable, but using CloudWatch (for example) you can trigger the UpdateService API to increment the number of tasks based on the metric(s) you care about.
Elastic Beanstalk is what you want to use of you want the simplicity of deploying applications within the Beanstalk application model. If you are running multiple applications across a fleet of instances or want more control over the application architectre, ECS will give you more flexibility.
When will IAM roles be able to be added to groups? Or have more than two policies attached?  It is a lot easier to debug short policies that each only grant one thing than long complex ones that you end up needing since you can't add roles to groups, or have a reasonable number of policies on a role.
Howdy again!  Any ETA on facilities to delete task definitions?  Thanks!
That's the whole problem! I wish Auto Scaling would **scale the container(s)** which is(are) running hot.
Remember that you own the instances that your containers are running on and can set up the appropriate privileges.  But it looks like you would be interested in per-container or per-task roles. If yes, we'd love to discuss this with you on the forums (https://forums.aws.amazon.com/forum.jspa?forumID=187)
Intentional that the GitHub link goes to a fork of ecs-agent rather than the source?
I'm a layman and just stumbled in here.   What is Amazon ec2 container service? 
If the resources are not available and you are using host port binding that is the likely problem.  Check your event stream on the service to see if that is indeed the case.
This sounds great! Please, blog somewhere about it. A *simple recipe* would be sufficient.  Thank you for the AMA session. You are great, guys.
I use a great free tool called AutomatiCloud http://www.automaticloud.net/ that provides a Windows cron-like service to schedule startup/shutdowns. It will also schedule snapshot creation. I do not understand why AWS fails to provide so many basic essential administrative functions forcing users to find a hodgepodge of 3rd-party bandaids.
https://www.youtube.com/watch?v=zBqjh61QcB4
You can run your own copy of the registry in a container and have it use S3 for backing store for the images. If you do, I'd recommend running it on each server so when you do a deploy, your whole herd of servers isn't fighting for the network bandwidth of a single registry instance.  You'll probably still want to have a single registry with write privileges, but running ro registry containers on your servers will make things a lot faster and eliminate the registry as a SPOF.
They said they're working on it.
It's our fork under development
How often do you all roll out changes to your Production service? What does your deployment process look like - do you roll out changes to a small # of customers, monitor for bad effects, and then continue with the rest of the Production environment?  Do you use any open source tools for your deployments, or is everything built inside of AWS?  I'm curious what patterns AWS use for their own services.
Exactly! This is what people want.  For example [Joyent](https://www.joyent.com/) is launching this kind of service - Triton. No instances, no metrics, no sizes. "Hey, robot. Here is my container. Autoscale it."
The team is looking into this.
Oh, you mean AWS blog. It would be good if ECS team would have their own blog. :)  Thanks
Would http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/schedule_time.html not work? Just set the desired to 0 when you don't want to spin it up, change it to desired 1 when you do
We are like many other Amazon teams.  This talk will give you a sense of how we do deployments (https://www.youtube.com/watch?v=KzziRHOa5X4).  Long story short: We do a lot of deployments :).
Hi guys,  Will you favor a container's provide specifically, or will you support various ones? Docker, rocket...  How are you guys involved with any of these projects?   Finally, I find it somewhat hard to get the big picture as to your service compare with other technologies such as kubernetes, mesos, compose?  Thanks for the AMA! :)
Is vpc traffic between zones, private vpc's in this case, is data encrypted? What "level" of encryption is used? How can we prove this to auditors as a secure method for cross zone database replication?
Hi Amazon,  We are currently working on a POC where we use jobs (task definition with single container) that run from 15 minutes until a couple of hours on an ECS cluster.   To detect a conclusive failure on a container we can use a polling mechanic using describe-tasks (for failures on tasks) and describe-container-instances (to know a task failure quickly if the task is still "running", but the container instance is not).  Apart from this polling mechanic is there the possibility of a future push notification such as SNS and/or Lambda receiving a notification when either a task or a container instance changes state?  How quickly can we expect a task state to go to failed if the container instance goes down and brings the task down with it?
Why do Microsoft On-Demand Instances cost more per hour at US West (North California) than your other two US data centers? Does it cost more for electricity or are employees there paid more and that is reflected in the costs? Or some entirely different reason?
I don't know anything about EC2 Container Service, but hoping you can help clear up a question that has dogged us for a couple of years since we started using ECC instances.  We continue to see a bug with load balancers that fail to register when an instance is restarted. The health check would pass... if the LB bothered to try checking it, but for some reason the LB simply won't see the instance as alive without manual intervention to remove and re-add the instance. We see this as a major failure, because a) it gums up our automation and b) the health check should define how the system determines if an instance is alive or not, but this behavior occurs in defiance of the health check settings.  So my question(s) is/are: How do we get Amazon to pay attention to issues like this when repeated support cases only result in 'This is a known problem" messages? And along with that, is there any push inside Amazon to complete the build-out of what is in many many ways a very unfinished service when it comes to basic administrative operations? Some examples: inability to make dynamic changes to network card settings on an instance, inability to change volume settings like reserved IOPS, inability to do many tasks without 3rd-party tools, some tasks can be done only with command line while others are very difficult to do with command line, documentation for new users is really scarce, and so on. Is there any way to get some much-needed improvements in the development path?
A year ago I got super into TwitchPlaysPokemon, and I built my own varient with an emulator and C.  I didn't have the network speed or the graphical card to both stream AND run the emulator at the same time though. I tried looking at some services, including AWS and I couldn't find any machine that could do consumer-level graphics.  I get that AWS is for big data, for big buisness, but will we see more elaborate personal cloud computing for projects like this? I was super bummed that ECS couldn't really help me out.
Is there any way that you guys can get the latest version of powershell added to windows server 2008 R2. Server 2012 makes me a sad panda.
Hey Guys!  Love basically everything about AWS!  We use it daily at work, my colleague has his cert and I am working towards getting mine as well.   Aside from CloudWatch, what tools do you guys use to monitor your applications / servers?  I find CloudWatch a little.... lack luster when you look at the rest of AWS.  We have looked at things like CopperEgg and are now looking at NewRelic.  Also, when will we see more T class EC2 instances!  We love T2 instances to use in OpsWorks as our load/timed servers but would love to see more in this sort of class of server.  Any change we will get to see T2 style servers with a memory focus?  As our team uses AWS more, others in our company are looking at AWS services and coming to us for help.  One of the things they are looking at is going a cloud render farm to offload any backlog.  I know at Re:Invent 2013 there was a great talk from a company who was doing this (Rendering Star Trek i think), any insight or case studies you can direct me to about this?  Also.... please give me Re:Invent 2015 tickets!
OK, now what the heck is Docker?
Any chance that the deployment error messages from Beanstalk could be made to be more descriptive? I uploaded a large PHP application package (little PHP, large dictionary with thousands of small files) and all I got back was something like "Failed."
That is in its entirety confusing as shit. I say that after having read through it three times. As a non-developer ops admin I see dozens of keywords that point me *away* from this document as a place to find the answer to my questions.   First, it's part of an API guide. I'm not looking for administrative functions in an API. Second, it's talking about scaling applications while I'm looking to start and stop Windows servers (our developers build everything in Windows, so that's what I have to support regardless how much I'd prefer they work in Linux.), section headers that talk about programming considerations, the fact that 'scaling' in AWS generally seems to be about creating NEW instances/services rather than managing old ones, and then the fact that everything from the command line requires AWS-assigned instance IDs. That's not something I want to deal with. Something that lets me search/sort on instance name or look at a tag is much simpler and easier to understand. Fourth time perusing this article while I'm typing this, and it STILL is clear as mud.
Isn't that basically what beanstalk is?
Don't forget the contention of your nat instance. 
[deleted]
Would you be able to get Amazon to sponsor DebCon15, Debian's annual developer conference?  We have a [brochure](http://media.debconf.org/dc15/fundraising/debconf15_sponsorship_brochure.pdf), too :)  You can poke RichiH on freenode or OFTC to verify that this is not a random scam attempt.
Hope I didn't miss the gravy train.  I recently used an EC2 server to build a web service for a mobile application I was writing for one of my college classes. It took me about 1-2 hours to set up and install everything I needed (FIRST TIME!). You guys do fantastic work.  Do you guys have any plans for offering free, higher tier service for those of us who are poor and in college? I know there's some grants in place, but a lot of tech companies (Microsoft, Github, Google, Idea) "donate" some really useful software.
I think new regions(like eu-central-1) do not have EC2-Classic, so I wouldn't count on it.
https://aws.amazon.com/workspaces/
AFAIK instance registration against a elb is an entirely different process to passing health checks, it sounds like reboots are sometimes causing deregistrations, you should look into that
Chef has far superior Windows support than puppet.  The rest is the pets vs cattle thinking applied to service layers
Thanks for the kind gesture.
Completelly different thing.
Except not really now with the support for docker containers built in. You could give it a container and just have it manage the scaling of it.
So that they can sell Workspaces, presumably. Possibly a licencing issue as well.
This looks like the missing bit I was looking for. Thanks!
NP i only found out about it due to someone else linking it up post. :)
You can configure this with an autoscaling group.  So if you have 1 instance you can scale up more instances then scale back down later.  Is this what you mean?  Otherwise it's a trivial task to do with the AWS CLI for example I had a bunch of demo machines that would only need to run during business hours so I just made a cronjob for this command:  &gt; $ aws ec2 start-instances --instance-ids &lt;id&gt;  
G2 instances work fine for use cases like that.  
Unfortunately, Beanstalk is not what we need. It scales a single docker container in a single EC2 instance. This is a huge downside. We are going to have dozens of different containers (because microservices). Spinning dozens of instances per AZ is an overhead.
Yeah that's going to be a pain.   I saw something about using cloudwatch and an auto scale group to trigger the update-service api to add extra containers when required.  or role your own with mesos and an asg running the instances behind it.
Yeah. This is what I don't want to do - roll and maintain own "ASG". :) Okay, we'll see. Thanks for the conversation. Have a good afternoon.
Not really ECS related, but what benefits would you expect from ARM vs x86?  I've heard it said that emulated ARM is faster than real ARM, given the right host, at least.
More of an EC2 question (Hey! We should get that team here, too!), but I think the t2.small is the closest upgrade path. But I agree with you that it doesn't appear to be a trivial migration, even if you haven't done a lot of specialization.    I don't think Amazon has ever ended an instance type... but I expect some of them are never again going to see a price cut and they might get harder to find as the hardware that supports them grinds down to dust...  In other words, you should probably try to make a leap to a current generation sometime soon, if only because it will probably save you money in the long run.
More efficient virtualization, the accelerated instructions tend to be better supported, and eventually just plain cheaper.  Oh, better responsiveness, even if you're oversubscribed you're likely to have a core to yourself, which might be a weaker core, but you're less timesliced.
Can I suggest an interim fix.  I had to do this when I was away on leave and needed to use the AWS console through a borrowed netbook, 11 inch screen.  I used chrome and the developer tools to modify the CSS slightly.  Just enough to set the window into the viewable area.  It was a pain in the arse, but it worked in a pinch.
[deleted]
Q1. - Is it possible to have replication between 2x Sites at AWS.   Example - If I was to spin up an EC2 and want it replicated from Ireland to Germany so if Ireland was to have issues or I wanted to do some work on the Ireland EC2 then I can power it down and German EC2 will spin-up.  With that if Ireland EC2 isn't available/down can the elastic IP failover to the German EC2 with that?  Even though in 100 Days I have 100% Uptime in Ireland this would be a great feature, I've not looked much into it so it could be very simple to do.
Hi, I started learning AWS. Should I take the Aws certification to prove that I am knowledgeable ? Is the certification worth taking? From what I am learning through online course and what I see on the console  there are lot of differences, assuming that there would be more features/changes added, do you guys suggest taking any of the certification?
when are my cables getting to my house?  /s
[deleted]
You are able to import a Windows 7 instance, you just need to have your own license.  http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/VMImportPrerequisites.html
I do chats for Att, we have somebody chatting in regularly using ec2 servers to connect to try and scam us, anything that can be done?
...but once he ships that feature, the coffee stops.  You need to come up with a better reward model for your interactions with the ELB team lead.  :)
Good idea - thanks.
For anybody who also run into this problem, this has been solved, it works now.
this might be because all of your existing SGs were in EC2 classic and ECS requires VPCs. so you had to create a SG in VPC which is where these new rules were going.
What do you need instance names or tags for? This actually isn't API documentation you're reading, it's documentation for the AWS command line interface tools...  The API docs look like this: http://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_PutScheduledUpdateGroupAction.html  For what you want, you'd create an Auto-Scaling Group with a launch configuration referencing the AMI that's the snapshot of the instance you want to launch.  The ASG can also apply any tags you care about to the instances it launches.  The last command in the documentation linked in the parent tells you how to setup recurring scale up w/ a cron-like syntax, and you can do the same at an offset interval for scale down...  Sorry for the necro-response, but I've always been really impressed with their documentation so I was disappointed to see you were frustrated by it.
Have you tried zooming out? That usually works to get things within reach.
This bug has been fixed now.  Zoom out? How do you zoom out?
Hold down control key and use + and - keys to zoom. Or control key with mouse wheel.  You can zoom in to make things bigger but most browsers also let you zoom out to make things smaller, fitting lots more content on screen. 
Browser zoomin! Darn, never thought of it!! 
